package com.neuedu.dao;

import com.neuedu.common.ServerResponse;
import com.neuedu.pojo.UserInfo;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;
@Mapper
public interface UserInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbggenerated
     */
    int insert(UserInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbggenerated
     */
    UserInfo selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbggenerated
     */
    List<UserInfo> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(UserInfo record);


    /**
     * 检验用户名是否存在
     */
    int checkUsername(String username);

    /**
     * 通过邮箱检测用户是否存在
     */

    int checkEmail(String email);

    /**
     * 根据用户名和密码查找用户信息
     * 注意一个参数可以不添加注解@Param；如果
     * 存在多个注解则需要添加
     */
    UserInfo selectUserinfoByUsernameAndPassword(@Param(value = "username") String username,
                                                @Param(value = "password") String password);


    /**
     * 根据用户名查询用户的密保问题
     */
    String forgetGetQuestionByUsername(String username);


    /**
     * 根据用户名、密码以及密保问题答案查询数据
     */

    int selectByUsernameAndPasswordAndAnswer(@Param(value = "username") String username,
                                             @Param(value = "question") String question,
                                             @Param(value = "answer") String answer);

      /*
    根据用户名以及用户名对应token修改新密码
    并且方法中参数为password是修改后的密码
     */
      int resetByUsernameAndToken(@Param(value = "username") String username,
                                             @Param(value = "password") String password);


      int updateUserBySelectActive(UserInfo userInfo);
}







