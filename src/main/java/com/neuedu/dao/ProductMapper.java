package com.neuedu.dao;

import com.neuedu.pojo.Product;
import com.neuedu.pojo.Product;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Set;

@Mapper
public interface ProductMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_product
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_product
     *
     * @mbggenerated
     */
    int insert(Product record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_product
     *
     * @mbggenerated
     */
    Product selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_product
     *
     * @mbggenerated
     */
    List<Product> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_product
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(Product record);


    /*
    更新商品上下级状态的映射接口
     */
    int updateStatusByProductId(Product product);

    /*
    通过商品名称以及商品ID进行查询方法的映射接口 ，但也是可以省略不写的，如果
   只有商品ID就是进行精准查询，如果是写上商品名称则是通过模糊查询
   注意在mapper的sql语句中test里面的值与花括号里面的值必须与Mapper文件中对应名接口的value值一致
   如果是单个参数用不到param时就必须与参数名一致，否则就无法将属性注入到sql语句中
     */
    List<Product> findProductBySelectIdOrProductName(@Param(value = "productId") Integer productId,
                                                     @Param(value = "productName") String productName);

    /*
    前台通过类别ID或者关键字的模糊查询的方法映射文件接口，
    但是注意的是在逻辑判断的时候至少要包含
    ID或者关键字的其中一个，之后通过分页查询返回查询的数据，并且要进行排序
     */

    List<Product> findProductByCategoryIdOrKeyWordAndOrderBy(@Param(value = "integerSet") Set<Integer> integerSet,
                                                             @Param(value = "keyWord") String keyWord);





}