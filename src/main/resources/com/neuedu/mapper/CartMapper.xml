<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.dao.CartMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.pojo.Cart" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="quantity" property="quantity" jdbcType="INTEGER" />
    <result column="checked" property="checked" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from neuedu_cart
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.neuedu.pojo.Cart" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into neuedu_cart (id, user_id, product_id, 
      quantity, checked, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, 
      #{quantity,jdbcType=INTEGER}, #{checked,jdbcType=INTEGER},now(),
     now())
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.pojo.Cart" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update neuedu_cart
    set user_id = #{userId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      checked = #{checked,jdbcType=INTEGER},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, user_id, product_id, quantity, checked, create_time, update_time
    from neuedu_cart
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, user_id, product_id, quantity, checked, create_time, update_time
    from neuedu_cart
  </select>

  <!--通过用户ID以及商品ID查询购物车信息的映射文件接口（因为购物车和用户的绑定关系的）-->
  <select id="selectCartByUserIdAndProductId" parameterType="map" resultMap="BaseResultMap">
    select id, user_id, product_id, quantity, checked, create_time, update_time
    from neuedu_cart
    where user_id = #{userId} and product_id =#{productId}
  </select>

  <!--通过用户ID查询到购物车的具体信息的映射文件，注意返回的值应该的有可能存在多个
  因为一个用户的购物车中可能有多件商品，所以返回值是List<Cart>-->
  <select id="findCartByUser" parameterType="int" resultMap="BaseResultMap">
    select id, user_id, product_id, quantity, checked, create_time, update_time
    from neuedu_cart
    where user_id = #{userId}
  </select>


  <!--统计购物车表中有几条未勾选的商品-->
  <select id="isNotCheckQuantity" parameterType="int" resultType="int">
    select count(1)
    from neuedu_cart
    where user_id = #{userId}
    and checked = 0
  </select>

  <!--删除购物车中的某些商品，通过userId以及productIdList确定-->
  <delete id="deleteProductsByUserIdAndProductIds" parameterType="map">
    delete from neuedu_cart
    <where>
      user_id = #{userId}
      <if test="productIdList!=null and productIdList.size>0">
        and product_id in 
        <foreach collection="productIdList" item="productId" open="(" close=")" separator=",">
          #{productId}
        </foreach>
      </if>
    </where>
  </delete>

  <!--批量删除购物车中已购买的商品-->
  <delete id="deleteCartAlreadyBuyProducts" parameterType="list">
    delete from neuedu_cart
    <where>
      id in
      <foreach collection="list" item="cart" open="(" close=")" separator=",">
        #{cart.id}
      </foreach>
    </where>
  </delete>

  <!--对购物车商品的选中状态进行一个操作，可以用一个接口表示四种状态
  购物车某个商品的选中或为选中（通过productId）
  购物车所有商品的选中或为选中（此时就不应该传productId这个参数）-->
  <update id="updateProductCheckedByUserIdAndProductId" parameterType="map">

    update neuedu_cart
    set checked = #{checked}
    <where>
      user_id = #{userId}
      <if test="productId!=null">
        and product_id = #{productId}
      </if>
    </where>
  </update>


  <!--查询在购物车里的产品数量
  并且注意，返回值类型最好是Interage，因为如果使用int作为返回值类型时
  当查询的用户id不存在时，那么查询的商品数量也是不存在的即为null
  这时就会产生类型不匹配的问题，从而产生错误
  但是也可以使用int作为返回值类型，但是要在sql语句中使用ifnull即
  ifnull（sum（quantity））-->
  <select id="getCartProductCountByUserId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select sum(quantity)
    from neuedu_cart
    where user_id = #{userId}
  </select>

  <!--查询某用户购物车中已选中的商品信息，注意checked=1，并通过userId-->
  <select id="findCartProductByUserIdAndChecked" parameterType="int" resultMap="BaseResultMap">

    select id, user_id, product_id, quantity, checked, create_time, update_time
    from neuedu_cart
    where user_id = #{userId}
    and checked = 1
  </select>
</mapper>